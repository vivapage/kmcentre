/* Inherit box-sizing to more easily change it's value on a component level.
@link http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */
*,
*::before,
*::after {
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
}

body {
  background: $color__background-body; // Fallback for when there is no custom background color defined.
}

hr {
  background-color: $color__background-hr;
  border: 0;
  height: 1px;
  margin-bottom: 1.5em;
}
//Button
.actions {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-self: flex-start;
  margin: 0.75rem 0 1rem;
}
.actions-content {
  display: flex;
  flex-direction: row;
}

.btn {
  position: relative;
  display: inline-flex;
  flex: 0 0 auto;
  flex-direction: row;
  justify-content: center;
  align-self: center;
  padding: 0 1.25rem;
  line-height: 2.125rem;
  font-size: 0.875rem;
  font-weight: 400;
  text-align: center;
  margin: 0.125rem;
  text-transform: uppercase;

  border-radius: 0.125rem;
  border: 2px solid $color__brown;
  background-color: $color__brown;
  color: $color__white;
  text-decoration: none;
  transition: color 0.125s ease;
  overflow: hidden;
  cursor: pointer;
  vertical-align: middle;
  outline: none;
  filter: drop-shadow(0px 3px 6px rgba(0, 0, 0, 0.16));

  &:before {
    background-color: $color__white;
    content: "";
    display: flex;
    transform: scale(1, 0);
    transition: transform 0.25s ease;
    transform-origin: 50% 100%;
    position: absolute;
    overflow: hidden;
    border-radius: 1px;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 0;
  }

  span {
    display: flex;
    position: relative;
    z-index: 1;
    margin-top: 2px;
  }

  &:hover,
  &:active,
  &:focus {
    color: $color__brown;

    &:before {
      transform: scale(1, 1);
    }
  }

  &.rounded {
    border-radius: 1.1875rem;
  }
}

.overflow_hidden {
  overflow: hidden;
  position: relative;
}

.top-slider {
  background: $color__green;
}

.radius_niz_mini {
  border-radius: 0 0 100% 100%;
  display: block;
  overflow: hidden;
  margin: 0 -80px;
  padding: 0 80px;
  transform: translateZ(0);
  //text-align: center;
}

.radius_niz {
  border-radius: 0 0 100% 100%;
  display: block;
  overflow: hidden;
  margin: 0 -80px;
  padding: 0 80px;
  transform: translateZ(0);
  text-align: center;
}
.radius_row_top:before {
  content: "";
  background: #ffffff;
  position: absolute;
  width: 100%;
  height: 430px;
  left: 0;
  top: 0;
  border-radius: 0 0 100% 100%;
  display: block;
  overflow: hidden;
  margin: -305px -90px 0 -90px;
  padding: 0 90px;
  transform: translateZ(0);
}

.radius_row_niz:after {
  content: "";
  background: #ffffff;
  position: absolute;
  width: 120%;
  height: 430px;
  left: -12%;
  bottom: 0;
  border-radius: 100% 100% 0 0;
  display: block;
  overflow: hidden;
  margin: 0 0px -305px 0px;
  padding: 0 90px;
  transform: translateZ(0);
}

.services {
  padding: 150px 0 0px 0;
  background: $color__green;
  margin-top: -120px;
}
.services_row {
  padding-bottom: 150px;
}

.row::before,
.row::after {
  content: " ";
  display: table;
  /* clear: both; */
}
@import "header";

@import "lists";

img {
  height: auto; // Make sure images are scaled correctly.
  max-width: 100%; // Adhere to container width.
}

figure {
  margin: 1em 0; // Extra wide images within figure tags don't overflow the content area.
}

@import "tables";

//@import "slick";
